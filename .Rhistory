data_tf[data_tf$justicia == 0,]
data_tf[data_tf$justicia == 0,c("justicia")]
data_tf[data_tf$justicia == 0,1]
library(dplyr)
regiones <- strsplit(as.character(data_tf[,1]), '/')
data_tf$region <- sapply(regiones, "[[", 1)
data_tf <- data_tf %>% select(localidad, region, everything())
library(ggplot2)
data_tf[c("a")]
library(ggplot2)
data_tf[c("region")]
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
coq
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,-1])
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
coq
sumas <- colSums(coq[,-1])
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,-2])
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,-3])
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,-1, -2])
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
sumas
concp <- head(sort(sumas, decreasing = TRUE), 10)
concp
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- head(sort(sumas, decreasing = TRUE), 10)
concp
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- head(sort(sumas, decreasing = TRUE), 10)
names(concp)
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)
concp
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE) # Suma de los conceptos, ya ordenados
concp
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE) # Suma de los conceptos, ya ordenados
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[:10] # Suma de los conceptos, ya ordenados
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los conceptos, ya ordenados
size = length(concp)
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los conceptos, ya ordenados
concp
size = length(concp)
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
namae <- data.frame(names=names(concp), values=as.numeric(concp))
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
namae <- data.frame(names=names(concp), values=as.numeric(concp))
namae
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
coquimbo <- data.frame(names=names(concp), values=as.numeric(concp))
ggplot(coquimbo) +
coord_flip() +
ggtitle("Los 10 conceptos más mencionados en Coquimbo") +
xlab("Concepto") + ylab("Frecuencia")
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
coquimbo <- data.frame(names=names(concp), values=as.numeric(concp))
coquimbo
ggplot(coquimbo) +
coord_flip() +
ggtitle("Los 10 conceptos más mencionados en Coquimbo") +
xlab("Concepto") + ylab("Frecuencia")
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
coquimbo <- data.frame(names=names(concp), values=as.numeric(concp))
ggplot(coquimbo) +
geom_bar(aes(x = names, y = values), stat="identity") +
coord_flip() +
ggtitle("Los 10 conceptos más mencionados en Coquimbo") +
xlab("Concepto") + ylab("Frecuencia")
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
coquimbo <- data.frame(names=names(concp), values=as.numeric(concp))
ggplot(coquimbo) +
geom_bar(aes(x = names, y = values), stat="identity") +
coord_flip() +
ggtitle("Los 10 conceptos más\nmencionados en Coquimbo") +
xlab("Concepto") + ylab("Frecuencia")
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concp <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
coquimbo <- data.frame(names=names(concp), values=as.numeric(concp))
ggplot(coquimbo) +
geom_bar(aes(x = names, y = values), stat="identity") +
coord_flip() +
ggtitle("Los 10 conceptos más\nmencionados en\nCoquimbo") +
xlab("Concepto") + ylab("Frecuencia")
library(ggplot2)
ant <- data_tf[data_tf$region == "Antofagasta",]
sumas <- colSums(ant[,3:114])
concept <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
antofagasta <- data.frame(names=names(concept), values=as.numeric(concept))
ggplot(antofagasta) +
geom_bar(aes(x = names, y = values), stat="identity") +
coord_flip() +
ggtitle("Los 10 conceptos más\nmencionados en\nCoquimbo") +
xlab("Concepto") + ylab("Frecuencia")
library(ggplot2)
ant <- data_tf[data_tf$region == "Antofagasta",]
sumas <- colSums(ant[,3:114])
concept <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
antofagasta <- data.frame(names=names(concept), values=as.numeric(concept))
ggplot(antofagasta) +
geom_bar(aes(x = names, y = values), stat="identity") +
coord_flip() +
ggtitle("Los 10 conceptos más\nmencionados en\nAntofagasta") +
xlab("Concepto") + ylab("Frecuencia")
library(ggplot2)
coq <- data_tf[data_tf$region == "Coquimbo",]
sumas <- colSums(coq[,3:114])
concept <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
coquimbo <- data.frame(names=names(concept), values=as.numeric(concept))
ggplot(coquimbo) +
geom_bar(aes(x = names, y = values), stat="identity") +
coord_flip() +
ggtitle("Los 10 conceptos más\nmencionados en\nCoquimbo") +
xlab("Concepto") + ylab("Frecuencia")
library(ggplot2)
ant <- data_tf[data_tf$region == "Metropolitana de Santiago",]
sumas <- colSums(ant[,3:114])
concept <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
antofagasta <- data.frame(names=names(concept), values=as.numeric(concept))
ggplot(antofagasta) +
geom_bar(aes(x = names, y = values), stat="identity") +
coord_flip() +
ggtitle("Los 10 conceptos más\nmencionados en\nMetropolitana de Santiago") +
xlab("Concepto") + ylab("Frecuencia")
library(ggplot2)
stg <- data_tf[data_tf$region == "Metropolitana de Santiago",]
sumas <- colSums(stg[,3:114])
concept <- sort(sumas, decreasing = TRUE)[1:10] # Suma de los 10 conceptos, ya ordenados.
santiago <- data.frame(names=names(concept), values=as.numeric(concept))
ggplot(santiago) +
geom_bar(aes(x = names, y = values), stat="identity") +
coord_flip() +
ggtitle("Los 10 conceptos más\nmencionados en\nMetropolitana de Santiago") +
xlab("Concepto") + ylab("Frecuencia")
tipos <- read.table("https://users.dcc.uchile.cl/~hsarmien/mineria/datasets/accidentes_2010_2011.txt")
head(tipos)
dim(data_tf)
```{r}
dim(data_tf)
data_tf[235,]
# Describe la cantidad de veces que cada concepto constitucional fue mencionado por cada localidad de Chile.
# En la fila 45 se ve cuántas veces de cada concepto se habló en Santa Barbara
dim(tipos)
tipos[235,]
# Describe la cantidad de veces que cada concepto constitucional fue mencionado por cada localidad de Chile.
# En la fila 45 se ve cuántas veces de cada concepto se habló en Santa Barbara
tipos[235,]
# Describe los accidentes de tránsito por localidad, en la fila 235 se describe cuántos accidentes fueron, de qué tipo, el año y en dónde fue.
accidentes_regionales_2010 <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidentes_regionales_2010, aes(x = TipoAccidente, y = Cantidad)) +
geom_boxplot() +
# scale_y_continuous(limits = c(0, 3500)) +   # Línea de código para hacer zoom sobre la muestra. Elimina datos
coord_flip() +  # transformamos el grafico invirtiendo los ejes de coordenadas (sólo visualmente)
ggtitle("Cantidad de accidentes a nivel regional por tipo de accidente, año 2010") + # título
xlab("Tipo de Accidente") + ylab("Cantidad")  # etiquetas +
library(ggplot2)
accidentes_regionales_2010 <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidentes_regionales_2010, aes(x = TipoAccidente, y = Cantidad)) +
geom_boxplot() +
# scale_y_continuous(limits = c(0, 3500)) +   # Línea de código para hacer zoom sobre la muestra. Elimina datos
coord_flip() +  # transformamos el grafico invirtiendo los ejes de coordenadas (sólo visualmente)
ggtitle("Cantidad de accidentes a nivel regional por tipo de accidente, año 2010") + # título
xlab("Tipo de Accidente") + ylab("Cantidad")  # etiquetas +
library(ggplot2)
accidt <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidt, aes(x = Tipo de accidente, y = Cantidad)) +
library(ggplot2)
accidt <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidt, aes(x = TipoAccidente, y = Cantidad)) +
geom_boxplot() +
# scale_y_continuous(limits = c(0, 3500)) +   # Línea de código para hacer zoom sobre la muestra. Elimina datos
coord_flip() +  # transformamos el grafico invirtiendo los ejes de coordenadas (sólo visualmente)
ggtitle("Cantidad de accidentes a nivel regional por tipo de accidente, año 2010") + # título
xlab("Tipo de Accidente") + ylab("Cantidad")  # etiquetas +
library(ggplot2)
accidt <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidt, aes(x = TipoAccidente, y = Cantidad)) +
geom_boxplot() +
coord_flip() +  # transformamos el grafico invirtiendo los ejes de coordenadas (sólo visualmente)
ggtitle("Cantidad de accidentes a nivel regional por tipo de accidente, año 2010") + # título
xlab("Tipo de Accidente") + ylab("Cantidad")  # etiquetas +
library(ggplot2)
accidt <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidt, aes(x = TipoAccidente, y = Cantidad)) +
geom_boxplot() +
coord_flip() +  # invertir los ejes
ggtitle("Cantidad de accidentes a nivel regional en 2010 según su tipo") + # título
xlab("Tipo de Accidente") + ylab("Cantidad")  # etiquetas +
library(ggplot2)
accidt <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidt, aes(x = TipoAccidente, y = Cantidad)) +
geom_boxplot() +
coord_flip() +  # invertir los ejes
ggtitle("Cantidad de accidentes a nivel regional en 2010 según su tipo") +
xlab("Tipo de Accidente") + ylab("Cantidad")
library(ggplot2)
accidt <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidt, aes(x = TipoAccdt, y = Cantidad)) +
geom_boxplot() +
coord_flip() +  # invertir los ejes
ggtitle("Cantidad de accidentes a nivel regional en 2010 según su tipo") +
xlab("Tipo de Accidente") + ylab("Cantidad")
library(ggplot2)
accidt <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidt, aes(x = TipoAccidente, y = Cantidad)) +
geom_boxplot() +
coord_flip() +  # invertir los ejes
ggtitle("Cantidad de accidentes a nivel regional en 2010 según su tipo") +
xlab("Tipo de Accidente") + ylab("Cantidad")
pre_acc <- tipos[, c("TipoAccidente", "Anio", "Cantidad")]
acc <- pre_acc[pre_acc$TipoAccidente == "Colision", ]
acc[acc$Anio == 2011, ]
acc <- with(tipos, tipos[Muestra == "Nacional", ])
porTipo<- tipos %>%
group_by(TipoAccidente) %>%
summarise(total = sum(Cantidad)) %>%
arrange(-total)
accidentes_nacionales <- with(tipos, tipos[Muestra == "Nacional", ])
porTipo<- tipos %>%
group_by(TipoAccidente) %>%
summarise(total = sum(Cantidad)) %>%
arrange(-total)
library(tidyverse)
accidentes_nacionales <- with(tipos, tipos[Muestra == "Nacional", ])
porTipo<- tipos %>%
group_by(TipoAccidente) %>%
summarise(total = sum(Cantidad)) %>%
arrange(-total)
pie(porTipo$total, labels=porTipo$TipoAccidente,main="Tipos de accidente en total" )
library(tidyverse)
acc <- with(tipos, tipos[Muestra == "Nacional", ])
porTipo<- tipos %>%
group_by(TipoAccidente) %>%
summarise(total = sum(Cantidad)) %>%
arrange(-total)
pie(porTipo$total, labels=porTipo$TipoAccidente,main="Tipos de accidente en total" )
library(tidyverse)
acc <- with(tipos, tipos[Muestra == "Nacional", ])
xtipo <- tipos %>%
group_by(TipoAccidente) %>%
summarise(total = sum(Cantidad)) %>%
arrange(-total)
pie(porTipo$total, labels=xtipo$TipoAccidente,main="Tipos de accidente en su totalidad" )
library(tidyverse)
acc <- with(tipos, tipos[Muestra == "Nacional", ])
xtipo <- tipos %>%
group_by(TipoAccidente) %>%
summarise(total = sum(Cantidad)) %>%
arrange(-total)
pie(porTipo$total, labels=xtipo$TipoAccidente,main="Tipos de accidente en su totalidad" )
# Una buena forma sería filtrar todo por "Nacional", para ver cómo se distribuyen los tipos de accidentes de la forma en que se ve abajo, notando que los más comunes son "choque", "Atropello" y "Volcadura" (en ese orden).
library(ggplot2)
data("diamonds")
head(diamonds)
sum(is.na(diamonds$depth))
sum(is.na(diamonds$table))
sum(is.na(diamonds$depth))
sum(is.na(diamonds$table))
sum(is.na(diamonds$x))
sum(is.na(diamonds$y))
sum(is.na(diamonds$z))
summary(diamonds)
boxplot(x=diamonds[,c("depth","table","x","y","z")], main="Medidas fisicas")
boxplot(x=diamonds[,c("depth","table","x","y","z")], main="Medidas fisicas")
source("~/.active-rstudio-document", encoding = 'UTF-8', echo=TRUE)
cor(diamonds[,c("carat","price","depth","table","x","y","z")])
cor(diamonds[,c("carat","price","depth","table","x","y","z")])
tipos <- read.table("https://users.dcc.uchile.cl/~hsarmien/mineria/datasets/accidentes_2010_2011.txt")
head(tipos)
dim(tipos)
tipos[235,]
# Describe los accidentes de tránsito por localidad, en la fila 235 se describe cuántos accidentes fueron, de qué tipo, el año y en dónde fue.
pre_acc <- tipos[, c("TipoAccidente", "Anio", "Cantidad")]
acc <- pre_acc[pre_acc$TipoAccidente == "Colision", ]
acc[acc$Anio == 2011, ]
library(ggplot2)
accidt <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidt, aes(x = TipoAccidente, y = Cantidad)) +
geom_boxplot() +
coord_flip() +  # invertir los ejes
ggtitle("Cantidad de accidentes a nivel regional en 2010 según su tipo") +
xlab("Tipo de Accidente") + ylab("Cantidad")
library(tidyverse)
acc <- with(tipos, tipos[Muestra == "Nacional", ])
xtipo <- tipos %>%
group_by(TipoAccidente) %>%
summarise(total = sum(Cantidad)) %>%
arrange(-total)
pie(porTipo$total, labels=xtipo$TipoAccidente,main="Tipos de accidente en su totalidad" )
# Una buena forma sería filtrar todo por "Nacional", para ver cómo se distribuyen los tipos de accidentes de la forma en que se ve abajo, notando que los más comunes son "choque", "Atropello" y "Volcadura" (en ese orden).
library(ggplot2)
data("diamonds")
head(diamonds)
sum(is.na(diamonds$depth))
sum(is.na(diamonds$table))
sum(is.na(diamonds$x))
sum(is.na(diamonds$y))
sum(is.na(diamonds$z))
summary(diamonds)
boxplot(x=diamonds[,c("depth","table","x","y","z")], main="Medidas fisicas")
cor(diamonds[a,c("carat","price","depth","table","x","y","z")])
tipos <- read.table("https://users.dcc.uchile.cl/~hsarmien/mineria/datasets/accidentes_2010_2011.txt")
head(tipos)
dim(tipos)
tipos[235,]
# Describe los accidentes de tránsito por localidad, en la fila 235 se describe cuántos accidentes fueron, de qué tipo, el año y en dónde fue.
pre_acc <- tipos[, c("TipoAccidente", "Anio", "Cantidad")]
acc <- pre_acc[pre_acc$TipoAccidente == "Colision", ]
acc[acc$Anio == 2011, ]
library(ggplot2)
accidt <- with(tipos, tipos[Muestra == "Regional" & Anio == 2010, ])
ggplot(accidt, aes(x = TipoAccidente, y = Cantidad)) +
geom_boxplot() +
coord_flip() +  # invertir los ejes
ggtitle("Cantidad de accidentes a nivel regional en 2010 según su tipo") +
xlab("Tipo de Accidente") + ylab("Cantidad")
library(tidyverse)
acc <- with(tipos, tipos[Muestra == "Nacional", ])
xtipo <- tipos %>%
group_by(TipoAccidente) %>%
summarise(total = sum(Cantidad)) %>%
arrange(-total)
pie(xtipo$total, labels=xtipo$TipoAccidente,main="Tipos de accidente en su totalidad" )
# Una buena forma sería filtrar todo por "Nacional", para ver cómo se distribuyen los tipos de accidentes de la forma en que se ve abajo, notando que los más comunes son "choque", "Atropello" y "Volcadura" (en ese orden).
library(ggplot2)
data("diamonds")
head(diamonds)
sum(is.na(diamonds$depth))
sum(is.na(diamonds$table))
sum(is.na(diamonds$x))
sum(is.na(diamonds$y))
sum(is.na(diamonds$z))
summary(diamonds)
boxplot(x=diamonds[,c("depth","table","x","y","z")], main="Medidas fisicas")
cor(diamonds[,c("carat","price","depth","table","x","y","z")])
knitr::opts_chunk$set(echo = TRUE)
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("~/RDATA/Hito1/Data-Mining-CC5206")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("~/Hito1/Data-Mining-CC5206")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("~/Hito1/Data-Mining-CC5206")
```{r}
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("~/Hito1/Data-Mining-CC5206")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("~")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:\Users\Cherry\Desktop\U\Semestre-8\Mineria\Hito1\Data-Mining-CC5206")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:/Users/Cherry\Desktop\U\Semestre-8\Mineria\Hito1\Data-Mining-CC5206")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:/Users/Cherry/Desktop/U/Semestre-8/Mineria/Hito1/Data-Mining-CC5206")
knitr::opts_chunk$set(echo = TRUE)
```{r}
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:/Users/Cherry/Desktop/U/Semestre-8/Mineria/Hito1/Data-Mining-CC5206")
```{r}
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:/Users/Cherry/Desktop/U/Semestre-8/Mineria/Hito1/Data-Mining-CC5206")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
#pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos_detalle <-read.csv("order_detail.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
pedidos <- read.csv("orders.csv", encoding = "UTF-8")
knitr::opts_chunk$set(echo = TRUE)
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("~/RDATA/")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:/Users/Cherry/Desktop/U/Semestre-8/Mineria/Hito1/Data-Mining-CC5206")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("~")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:/Users/Cherry/Desktop/U/Semestre-8/Mineria/Hito1/Data-Mining-CC5206")
knitr::opts_chunk$set(echo = TRUE)
pedidos_preeliminar <- read.csv("orders.csv", encoding = "UTF-8")
pedidos_preeliminar <- read.csv("orders.csv", encoding = "UTF-8")
pedidos_preeliminar <- read.csv("orders.csv", encoding = "UTF-8")
pedidos_preeliminar <- read.csv("orders.csv", encoding = "UTF-8")
pedidos_preeliminar <- read.csv("orders.csv", encoding = "UTF-8")
pedidos_preeliminar <- read.csv("orders.csv", encoding = "UTF-8")
pedidos<-read.csv("Orders_OFICIAL.csv", encoding = "UTF-8", sep=";")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:/Users/Cherry/Desktop/U/Semestre-8/Mineria/Hito1/Data-Mining-CC5206")
pedidos_preeliminar <- read.csv("orders.csv", encoding = "UTF-8")
head(pedidos_preeliminar)
pedidos<-read.csv("Orders_OFICIAL.csv", encoding = "UTF-8", sep=";")
pedidos<-read.csv("Orders_OFICIAL.csv", encoding = "UTF-8", sep=";")
head(pedidos_preeliminar)
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:/Users/Cherry/Desktop/U/Semestre-8/Mineria/Hito1/Data-Mining-CC5206")
pedidos_preeliminar <- read.csv("orders.csv", encoding = "UTF-8")
pedidos_detalle_preeliminar <-read.csv("order_detail.csv", encoding = "UTF-8")
head(pedidos_preeliminar)
head(pedidos_detalle_preeliminar)
nrow(pedidos_preeliminar)
ncol(pedidos_preeliminar)
nrow(pedidos_detalle_preeliminar)
ncol(pedidos_detalle_preeliminar)
pedidos<-read.csv("Orders_OFICIAL.csv", encoding = "UTF-8", sep=";")
pedidos_detalle <-read.csv("ORDER_DETAIL_OFICIAL.csv", encoding = "UTF-8",sep=";")
pedidos$count <- as.numeric(ave(pedidos$Comuna, pedidos$Comuna, FUN = length))
(pedidos)
nrow(pedidos)
ncol(pedidos)
(pedidos_detalle)
nrow(pedidos_detalle)
ncol(pedidos_detalle)
library(dplyr)
pedidos$Fecha.Compra <- as.Date(pedidos$Fecha.Compra, format ="%d-%m-%Y")
(pedidos)
pedidos_detalle$Fecha.Pedido <- as.Date(pedidos_detalle$Fecha.Pedido, format ="%Y-%m-%d")
(pedidos_detalle)
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA
setwd("C:/Users/Cherry/Desktop/U/Semestre-8/Mineria/Hito1/Data-Mining-CC5206")
pedidos_preeliminar <- read.csv("orders.csv", encoding = "UTF-8")
pedidos_detalle_preeliminar <-read.csv("order_detail.csv", encoding = "UTF-8")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA y ponemos librerías
setwd("")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA y ponemos librerías
setwd("~")
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA y ponemos librerías
setwd("~")
library(ggplot2)
library(dplyr)
# Asignamos nuestro "working directory" (set w. d.) como el directorio ~/RDATA y ponemos librerías
setwd("~")
library(ggplot2)
library(dplyr)
